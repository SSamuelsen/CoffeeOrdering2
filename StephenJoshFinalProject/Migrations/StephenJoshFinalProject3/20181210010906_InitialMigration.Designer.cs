// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StephenJoshFinalProject.Models;

namespace StephenJoshFinalProject.Migrations.StephenJoshFinalProject3
{
    [DbContext(typeof(StephenJoshFinalProject3Context))]
    [Migration("20181210010906_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StephenJoshFinalProject.Models.DrinkName", b =>
                {
                    b.Property<int>("DrinkNameId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Americano");

                    b.Property<bool>("Carmelo");

                    b.Property<bool>("HotChocolate");

                    b.Property<bool>("LondonFog");

                    b.Property<bool>("Nova");

                    b.Property<bool>("Tea");

                    b.HasKey("DrinkNameId");

                    b.ToTable("DrinkName");
                });

            modelBuilder.Entity("StephenJoshFinalProject.Models.DrinkSpecs", b =>
                {
                    b.Property<int>("DrinkSpecsId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Frozen");

                    b.Property<bool>("Grande");

                    b.Property<bool>("Hot");

                    b.Property<bool>("Iced");

                    b.Property<int>("Quantity");

                    b.Property<string>("SpecialRequests");

                    b.Property<bool>("Tall");

                    b.HasKey("DrinkSpecsId");

                    b.ToTable("DrinkSpecs");
                });

            modelBuilder.Entity("StephenJoshFinalProject.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("OrderTotal");

                    b.Property<DateTime>("PickUpTime");

                    b.HasKey("OrderId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("StephenJoshFinalProject.Models.UserSubmittedOrder", b =>
                {
                    b.Property<int>("UserSubmittedOrderId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DrinkNameId");

                    b.Property<int?>("DrinkSpecsId");

                    b.Property<int?>("OrderId");

                    b.HasKey("UserSubmittedOrderId");

                    b.HasIndex("DrinkNameId");

                    b.HasIndex("DrinkSpecsId");

                    b.HasIndex("OrderId");

                    b.ToTable("UserSubmittedOrder");
                });

            modelBuilder.Entity("StephenJoshFinalProject.Models.UserSubmittedOrder", b =>
                {
                    b.HasOne("StephenJoshFinalProject.Models.DrinkName", "DrinkName")
                        .WithMany()
                        .HasForeignKey("DrinkNameId");

                    b.HasOne("StephenJoshFinalProject.Models.DrinkSpecs", "DrinkSpecs")
                        .WithMany()
                        .HasForeignKey("DrinkSpecsId");

                    b.HasOne("StephenJoshFinalProject.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId");
                });
#pragma warning restore 612, 618
        }
    }
}
